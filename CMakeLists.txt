CMAKE_MINIMUM_REQUIRED (VERSION 3.9)

PROJECT(NastyMathCPP)

INCLUDE(${CMAKE_SOURCE_DIR}/CMake/PrecompiledHeader.cmake)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Output)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Output)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Output)

SET(CMAKE_CXX_STANDARD 17)


IF(MSVC)
    ADD_DEFINITIONS(-DUNICODE -D_UNICODE)
	ADD_COMPILE_OPTIONS(/MP)	
ENDIF()

FILE(GLOB ROOT_DIRS LIST_DIRECTORIES true *)

foreach(dir IN LISTS ROOT_DIRS)			
	IF(NOT IS_DIRECTORY ${dir})
		LIST(REMOVE_ITEM ROOT_DIRS ${dir})
	ENDIF()
endforeach()

set(EXCLUDE_DIRS ${CMAKE_SOURCE_DIR}/dep ${CMAKE_SOURCE_DIR}/.git ${CMAKE_SOURCE_DIR}/CMake)
LIST(REMOVE_ITEM  ROOT_DIRS ${EXCLUDE_DIRS})
#message("ROOT_DIRS is ${ROOT_DIRS}")
	
FILE(GLOB SOURCES *.cpp)
FILE(GLOB HEADERS *.h *.inl)
SOURCE_GROUP(""  FILES ${SOURCES} ${HEADERS})

foreach(dir IN LISTS ROOT_DIRS)	
	FILE(GLOB_RECURSE  dirSOURCE ${dir}/*.cpp)
	LIST(APPEND SOURCES ${dirSOURCE})

	FILE(GLOB_RECURSE  dirHEADERS ${dir}/*.h ${dir}/*.inl)			
	LIST(APPEND HEADERS ${dirHEADERS})
endforeach()

SOURCE_GROUP(TREE ${CMAKE_SOURCE_DIR} FILES ${SOURCES} ${HEADERS})


set(CMAKE_INCLUDE_CURRENT_DIR ON)

FIND_PACKAGE( Boost REQUIRED )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )


set(Eigen_INCLUDE_DIR "" CACHE PATH "Eigen include directory. Example: C:\\Eigen3.2")
if(NOT DEFINED Eigen_INCLUDE_DIR OR Eigen_INCLUDE_DIR STREQUAL "")		
		message(FATAL_ERROR "define a varrible Eigen_INCLUDE_DIR and specify the path")
endif()
INCLUDE_DIRECTORIES( ${Eigen_INCLUDE_DIR} )

ADD_EXECUTABLE(NastyMathCPP ${SOURCES} ${HEADERS})

ADD_PRECOMPILED_HEADER(NastyMathCPP stdafx.h FORCEINCLUDE SOURCE_CXX ${CMAKE_SOURCE_DIR}/stdafx.cpp)


SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET_TARGET_PROPERTIES(NastyMathCPP PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})